services:
  # Databases
  mysql:
    image: mysql:8.0
    container_name: soa_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-soa_tours}
      MYSQL_USER: ${MYSQL_USER:-soa_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-soa_password123}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-mysql.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - soa-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpassword123}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongodb:
    image: mongo:7.0
    container_name: soa_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-mongopassword123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-soa_tours_content}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - soa-network
    healthcheck:
      test: |
        mongosh --eval "db.adminCommand('ping')" --quiet || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Microservices
  stakeholders-service:
    build:
      context: ./stakeholders-service
      dockerfile: Dockerfile
    container_name: soa_stakeholders
    environment:
      - PORT=8081
      - MYSQL_DSN=${MYSQL_USER:-soa_user}:${MYSQL_PASSWORD:-soa_password123}@tcp(mysql:3306)/${MYSQL_DATABASE:-soa_tours}?charset=utf8mb4&parseTime=True&loc=Local
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here-make-it-long-and-secure}
      - GIN_MODE=release
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - soa-network
    restart: unless-stopped
    #healthcheck:
     # test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/health"]
      #interval: 30s
      #timeout: 10s
      #retries: 3
      #start_period: 30s

  content-service:
    build:
      context: ./content-service
      dockerfile: Dockerfile
    container_name: soa_content
    environment:
      - PORT=8082
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-mongopassword123}@mongodb:27017/${MONGO_DATABASE:-soa_tours_content}?authSource=admin
      - STAKEHOLDERS_SERVICE_URL=stakeholders-service:8081
      - GIN_MODE=release
    ports:
      - "8082:8082"
    depends_on:
      mongodb:
        condition: service_healthy
      
    networks:
      - soa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8082/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  commerce-service:
    build:
      context: ./commerce-service
      dockerfile: Dockerfile
    container_name: soa_commerce
    environment:
      - PORT=8083
      - MYSQL_DSN=${MYSQL_USER:-soa_user}:${MYSQL_PASSWORD:-soa_password123}@tcp(mysql:3306)/${MYSQL_DATABASE:-soa_tours}?charset=utf8mb4&parseTime=True&loc=Local
      - MONGODB_URI=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-mongopassword123}@mongodb:27017/${MONGO_DATABASE:-soa_tours_content}?authSource=admin
      - STAKEHOLDERS_SERVICE_URL=stakeholders-service:8081
      - CONTENT_SERVICE_URL=content-service:8082
      - GIN_MODE=release
    ports:
      - "8083:8083"
    depends_on:
      mysql:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      
    networks:
      - soa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8083/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: soa_gateway
    environment:
      - PORT=8080
      - STAKEHOLDERS_SERVICE_URL=stakeholders-service:8081
      - CONTENT_SERVICE_URL=content-service:8082
      - COMMERCE_SERVICE_URL=commerce-service:8083
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-here-make-it-long-and-secure}
      - GIN_MODE=release
    ports:
      - "8080:8080"
    
      
    networks:
      - soa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  soa-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data:
    driver: local
  mongodb_data:
    driver: local